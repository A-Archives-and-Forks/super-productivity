#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// Get environment name from command line or default to development
const envName = process.argv[2] || 'development';

// Map environment names to .env files
const envFileMap = {
  development: '.env',
  production: '.env.production',
  stage: '.env.stage',
};

// Load environment variables manually
const envFile = envFileMap[envName] || '.env';
const envPath = path.join(process.cwd(), envFile);
const envContent = fs.readFileSync(envPath, 'utf8');
const env = {};

// Parse .env file
envContent.split('\n').forEach((line) => {
  line = line.trim();
  if (line && !line.startsWith('#')) {
    const [key, value] = line.split('=');
    if (key && value) {
      env[key.trim()] = value.trim();
    }
  }
});

// Generate environment.ts content
const envTsContent = `// This file is auto-generated by tools/generate-env.js
// Do not modify directly
import pkg from '../../package.json';

export const environment = {
  production: ${env.PRODUCTION === 'true'},
  stage: ${env.STAGE === 'true'},
  version: pkg.version,
};
`;

// Write to environment.ts
const targetPath = path.join(__dirname, '../src/environments/environment.ts');
fs.writeFileSync(targetPath, envTsContent);

console.log(`âœ… Generated environment.ts from ${envFile}`);
