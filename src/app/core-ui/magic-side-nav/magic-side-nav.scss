// Use app's CSS variables for width and spacing
$sidebar-width-expanded: var(--side-nav-width, 260px);
$mobile-breakpoint: 768px;
// Use duration/timing variables directly; --transition-standard is a shorthand
$transition-duration: var(--transition-duration-m, 0.3s);
$transition-timing: var(--ani-standard-timing, cubic-bezier(0.4, 0, 0.2, 1));
$overlay-bg: var(--c-backdrop, rgba(0, 0, 0, 0.6));

:host {
  // Ensure the component itself participates in layout and animates width
  display: block;
  flex: 0 0 auto;
  transition: none;
  will-change: width;
  position: relative;
  z-index: var(--z-side-nav);
  // Use app's CSS variables for consistent theming
  --sidebar-bg: var(--palette-background-card);
  --sidebar-border: var(--divider-color);
  --sidebar-text: rgba(
    var(--palette-foreground-text),
    var(--palette-foreground-text-alpha)
  );
  --sidebar-text-secondary: rgba(
    var(--palette-foreground-secondary-text),
    var(--palette-foreground-secondary-text-alpha)
  );
  --sidebar-hover: var(--palette-background-hover);
  --sidebar-active: var(--c-primary-10, rgba(var(--palette-primary-500-rgb), 0.04));
  --sidebar-active-text: var(--palette-primary-800);

  // Dark theme overrides
  body.isDarkTheme & {
    --sidebar-active-text: var(--c-primary);
  }
}

// Enable host width transition only when toggling collapsed/expanded
:host(.animate) {
  transition: width $transition-duration $transition-timing;
}

// Disable host transition during resize drags
:host(.resizing) {
  transition: none !important;
}

// Mobile menu toggle button
.mobile-menu-toggle {
  display: none;
  position: fixed;
  top: 16px;
  left: 16px;
  z-index: 1001;
  background: var(--sidebar-bg);
  border: 1px solid var(--sidebar-border);
  border-radius: 8px;
  padding: 8px;
  cursor: pointer;
  transition: var(--transition-standard);

  &.visible {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &:hover {
    background: var(--sidebar-hover);
  }

  svg {
    color: var(--sidebar-text);
  }
}

// Dark theme milkglass adjustments
:host-context(.isDarkTheme.hasBgImage) :host {
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(20px) saturate(180%);
  border-right: 1px solid rgba(255, 255, 255, 0.08);
  -webkit-backdrop-filter: blur(20px) saturate(180%); // Safari support
}

// Mobile overlay
.nav-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: $overlay-bg;
  z-index: var(--z-backdrop, 1001);
  opacity: 0;
  transition: opacity $transition-duration $transition-timing;

  &.visible {
    display: block;
    opacity: 1;
  }
}

// Main sidebar
.nav-sidebar {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: $sidebar-width-expanded;
  background: var(--sidebar-bg);
  border-right: 1px solid var(--sidebar-border);
  // Default: don't animate width
  transition: none;
  z-index: 1002;
  overflow-y: auto;
  overflow-x: hidden;

  // Slight elevation and clear background for overlay/mobile mode is defined in the mobile block below

  &.animate {
    transition: width $transition-duration $transition-timing;
  }

  &.resizing {
    transition: none !important;
  }

  // When resizing, also suppress label/text transitions inside entries
  &.resizing .nav-label,
  &.resizing .text {
    transition: none !important;
  }

  // Milkglass effect when background image is present
  // This will be applied when a CSS class is added to indicate background image presence
  :host-context(.hasBgImage) {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(20px) saturate(180%);
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    -webkit-backdrop-filter: blur(20px) saturate(180%); // Safari support
  }

  // Threshold zone visual feedback
  //&.collapse-zone {
  //  border-left: 3px solid #ef4444;
  //  box-shadow: inset 3px 0 0 rgba(239, 68, 68, 0.1);
  //
  //  .resize-handle {
  //    background-color: #ef4444 !important;
  //  }
  //}

  &.expand-zone {
    border-left: 3px solid var(--c-primary);
    box-shadow: inset 3px 0 0 rgba(16, 185, 129, 0.1);

    .resize-handle {
      background-color: var(--c-primary) !important;
    }
  }

  // Scrollbar styling
  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--sidebar-border);
    border-radius: 3px;

    &:hover {
      background: var(--sidebar-text-secondary);
    }
  }

  // Collapsed state (desktop)
  &.collapsed {
    // width controlled via inline style for smooth transitions

    .nav-children {
      display: none;
    }

    .nav-link {
      justify-content: center;
      padding: 12px;

      &[title] {
        // Ensure tooltip shows on hover for collapsed items
      }
    }

    .nav-icon {
      margin: 0;
    }

    // Multi-button wrapper in collapsed mode
    .g-multi-btn-wrapper {
      justify-content: center;

      .expand-btn {
        justify-content: center;
        padding: 12px;
        position: relative;

        .nav-icon {
          margin: 0;
        }

        // Show a small indicator when section is expanded in collapsed mode
        &.isExpanded::after {
          content: '';
          position: absolute;
          bottom: 2px;
          right: 2px;
          width: 4px;
          height: 4px;
          background-color: var(--sidebar-active-text);
          border-radius: 50%;
        }
      }

      // Hide additional buttons in collapsed mode
      .additional-btn {
        display: none;
      }
    }

    // Fix side-nav-item wrapping issues in collapsed mode
    ::ng-deep nav-item-inner {
      .additional-btn {
        display: none !important;
      }
    }

    .sidebar-toggle {
      right: auto;
      left: 50%;
      transform: translateX(-50%);
    }

    // Show resize handle in collapsed mode but style differently
    .resize-handle.collapsed-handle {
      display: block;
      width: 8px;
      right: -4px;

      &:hover {
        background-color: var(--sidebar-active-text);
      }

      .resize-handle-line {
        width: 3px;
        height: 60px;
        opacity: 0.7;
      }
    }
  }

  // Mobile specific
  &.mobile {
    transition: transform $transition-duration $transition-timing;
    will-change: transform;
    box-shadow: 4px 0 16px rgba(0, 0, 0, 0.3);
    transform: translateX(-100%);
    width: $sidebar-width-expanded;

    &.mobile-visible {
      transform: translateX(0);
    }
  }

  // Position right
  &.position-right {
    left: auto;
    right: 0;
    border-right: none;
    border-left: 1px solid var(--sidebar-border);

    &.mobile {
      transform: translateX(100%);

      &.mobile-visible {
        transform: translateX(0);
      }
    }

    .sidebar-toggle {
      left: 16px;
      right: auto;
    }

    &.collapse-zone {
      border-left: none;
      border-right: 3px solid #ef4444;
      box-shadow: inset -3px 0 0 rgba(239, 68, 68, 0.1);
    }

    &.expand-zone {
      border-left: none;
      border-right: 3px solid #10b981;
      box-shadow: inset -3px 0 0 rgba(16, 185, 129, 0.1);
    }
  }

  // Note: Theme colors are handled by CSS variables above
}

// Sidebar toggle button (desktop)
.sidebar-toggle {
  display: none;
  position: absolute;
  top: 16px;
  right: 16px;
  background: transparent;
  border: 1px solid var(--sidebar-border);
  border-radius: 6px;
  padding: 6px;
  cursor: pointer;
  transition: var(--transition-standard);
  color: var(--sidebar-text-secondary);

  &.visible {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &:hover {
    background: var(--sidebar-hover);
    color: var(--sidebar-text);
  }
}

// Navigation list
.nav-list {
  list-style: none;
  //padding: 60px var(--s) var(--s2);
  padding: 0;
  padding-top: 60px;
  margin: 0;
}

.nav-item {
  margin-bottom: 2px;

  &.has-children {
    margin-bottom: 4px;
  }
}

// Separator styling
.nav-separator {
  height: 1px;
  background: var(--divider-color);
  margin: var(--s2) var(--s2);
  border: none;
  opacity: 0.7;
}

// Navigation links
.nav-link {
  display: flex;
  align-items: center;
  gap: var(--s2);
  padding: var(--s2) var(--s2);
  color: var(--sidebar-text);
  text-decoration: none;
  border-radius: 8px;
  transition: all 0.2s ease;
  cursor: pointer;
  background: transparent;
  border: none;
  width: 100%;
  text-align: left;
  position: relative;

  &:hover {
    background: var(--sidebar-hover);
  }

  &.active {
    background: var(--sidebar-active);
    color: var(--sidebar-active-text);

    .nav-icon {
      color: var(--sidebar-active-text);
    }
  }

  &.expanded .nav-chevron {
    transform: rotate(180deg);
  }
}

// Navigation icon
.nav-icon {
  flex-shrink: 0;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--sidebar-text-secondary);
  font-size: 18px;
  line-height: 1;
}

// Navigation label
.nav-label {
  flex: 1;
  font-size: 14px;
  font-weight: 500;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Fix side-nav-item wrapping issues globally
::ng-deep nav-item-inner {
  display: flex !important;
  align-items: stretch;
  width: 100%;

  button:first-of-type {
    white-space: nowrap;
    overflow: hidden;
    flex: 1;
    min-width: 0;

    .text {
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .additional-btn {
    flex-shrink: 0;
    width: 40px !important;
    min-width: 40px !important;
  }
}

// Navigation chevron
.nav-chevron {
  flex-shrink: 0;
  transition: transform 0.2s ease;
  color: var(--sidebar-text-secondary);
}

// Children navigation
.nav-children {
  list-style: none;
  padding: 0;
  margin: 4px 0 0 0;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease;

  &.visible {
    max-height: 500px;
  }
}

.nav-child-item {
  //margin-left: var(--s3);
}

.nav-child-link {
  display: flex;
  align-items: center;
  gap: var(--s2);
  padding: var(--s) var(--s2);
  color: var(--sidebar-text-secondary);
  text-decoration: none;
  border-radius: 6px;
  transition: all 0.2s ease;
  cursor: pointer;
  background: transparent;
  border: none;
  width: 100%;
  text-align: left;
  font-size: 14px;

  &:hover {
    background: var(--sidebar-hover);
    color: var(--sidebar-text);
  }

  &.active {
    background: var(--sidebar-active);
    color: var(--sidebar-active-text);

    .nav-icon {
      color: var(--sidebar-active-text);
    }
  }

  .nav-icon {
    width: 20px;
    height: 20px;
    font-size: 16px;
  }
}

// Resize handle
.resize-handle {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 4px;
  cursor: col-resize;
  z-index: 1002;
  transition: background-color 0.2s ease;

  &.position-left {
    right: -2px;
  }

  &.position-right {
    left: -2px;
  }

  &:hover {
    background-color: var(--sidebar-active-text);

    .resize-handle-line {
      opacity: 1;
    }
  }

  &:active {
    background-color: var(--sidebar-active-text);
  }
}

.resize-handle-line {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 2px;
  height: 40px;
  background: var(--sidebar-text-secondary);
  border-radius: 1px;
  opacity: 0.5;
  transition: opacity 0.2s ease;
}

// Multi-button wrapper styling for expandable sections with additional buttons
.g-multi-btn-wrapper {
  display: flex;
  align-items: center;
  position: relative;

  .expand-btn {
    flex: 1;
    text-align: left;

    &.isExpanded .nav-icon {
      transform: rotate(180deg);
    }
  }

  .additional-btn {
    flex-shrink: 0;
    width: 32px;
    height: 32px;
    min-width: 32px;
    padding: 4px;
    margin-left: var(--s);
    color: var(--sidebar-text-secondary);
    background: transparent;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s ease;

    &:hover {
      background-color: var(--sidebar-hover);
      color: var(--sidebar-text);
    }

    mat-icon {
      font-size: 18px;
      width: 18px;
      height: 18px;
    }
  }

  .title {
    font-weight: 500;
  }
}

// Media queries
@media (max-width: $mobile-breakpoint) {
  .nav-sidebar {
    &.collapsed {
      width: $sidebar-width-expanded;

      .nav-label,
      .nav-chevron,
      .nav-children.visible {
        display: initial;
      }

      .nav-link {
        justify-content: flex-start;
        padding: 10px 12px;
      }
    }
  }
}

// Removed deep overrides for side-nav-item; it now supports a 'nav' variant

// Removed deep styling for nav-entry, nav-item and nav-row
