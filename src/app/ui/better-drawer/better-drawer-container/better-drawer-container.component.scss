@use '../../../../styles/_globals.scss' as *;

$z-this-content: calc(var(--z-side-panel-task-and-notes) + 1);
$z-this-backdrop: calc(var(--z-task-side-bar-over) - 1);

:host {
  display: flex;
  flex-direction: row;
  justify-content: stretch;
  align-items: stretch;
  height: 100%;
}

// Disable transitions during external resize drags
:host(.resizing) {
  .side {
    transition: none !important;
  }
}

.content {
  flex-grow: 1;
  max-width: 100%;
  position: relative;
  z-index: $z-this-content;
}

.side {
  // NOTE: we can't use margin-top: -1px; to prevent double border when header got a bottom one
  // because then there would be none

  position: relative;
  z-index: var(--z-side-panel-task-and-notes);
  transition: var(--transition-leave);
  transition-property: opacity, width, right, transform;
  // Cap panel to at most half of the container width in side mode
  max-width: 50%;
  background: var(--right-panel-bg);
  background: transparent;
  border-left: 1px solid var(--separator-color);
  overflow: visible; // allow overlay controls to stick out on the left edge

  @include mq(sm, max) {
    // NOTE: prevents overlapping with nav when open
    max-width: 500px;
  }

  @include mq(xs, max) {
    max-width: 100%;
  }

  //border-color: var(--extra-border-color);

  :host.isOver & {
    position: fixed;
    width: 80vw !important;
    max-width: none; // allow overlay to exceed side-mode cap
    top: 0;
    bottom: 0;
    z-index: var(--z-task-side-bar-over);
    right: 0;
    background: var(--right-panel-bg-mobile);

    @include mq(xs, max) {
      width: 100% !important;
    }
  }

  :host.isOpen.isOpen.isOpen & {
    //box-shadow: var(--whiteframe-shadow-2dp);
    opacity: 1;
    transition: var(--transition-enter);
  }
}

.side-inner {
  @include scrollYImportant();
  height: 100%;
  position: relative;
  z-index: 2;
}

.backdrop {
  // global styles in backdrop.scss
  z-index: $z-this-backdrop;

  @include mq(xs, max) {
    display: none;
  }
}

.close-btn {
  display: none;
  font-size: 32px;
  height: 48px;
  width: 48px;
  text-align: center;
  line-height: 46px;
  position: absolute;
  z-index: 23;
  top: 5px;
  cursor: pointer;
  right: var(--s);
  box-shadow: var(--whiteframe-shadow-2dp);
  border-radius: 50%;
  color: var(--text-color);
  background: var(--bg-lightest);
  border: 1px solid var(--extra-border-color);

  @include mq(xs) {
    top: 0;
    border-radius: 0;
    right: 100%;
    box-shadow: var(--whiteframe-shadow-1dp);
  }

  &,
  &:focus,
  &:active {
    outline: none;
  }

  @include mq(xs) {
    background: var(--bg-slightly-lighter);
  }

  :host.isOver.isOpen & {
    display: block;
  }

  @include mq(xs) {
    //display: none;
  }
}
