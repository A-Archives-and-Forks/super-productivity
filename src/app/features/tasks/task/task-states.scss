// Task state-specific styles (selected, current, done, etc.)

// Selected state styles
:host.isSelected {
  z-index: var(--z-is-selected-host);

  &.isSelected > .inner-wrapper > .box {
    transition: var(--transition-enter);
    transition-property: left, right, box-shadow;
    box-shadow: var(--task-selected-shadow);

    @include darkTheme {
      box-shadow: var(--whiteframe-shadow-4dp);
      background: var(--task-c-selected-hover-bg);
    }

    @include lightTheme {
      border-color: var(--extra-border-color);
    }
  }
}

// Current task styles
:host.isCurrent {
  z-index: var(--z-is-current-host);
  position: sticky;
  top: var(--s);

  .box {
    @include darkTheme {
      box-shadow: var(--whiteframe-shadow-6dp);
      background: var(--bg-lighter);
      border: 0;
    }

    @include lightTheme {
      border-color: var(--extra-border-color);
      background: var(--task-c-current-bg);
      border-width: 2px;
      top: 0;
      bottom: 0;
    }
  }
}

// Focus state
:host:focus {
  z-index: var(--z-focus-host);
  outline: none;

  > .inner-wrapper > .box {
    @include noTouchOnly() {
      border-color: var(--palette-primary-400);
      border-width: 1px;
      border-style: solid !important;
    }
  }
}

// Done state styles
:host.isDone {
  .task-title {
    text-decoration: line-through;
    opacity: 0.85;
  }

  .box {
    @include darkTheme {
      background: var(--task-c-bg-done);
    }

    @include lightTheme {
      background: var(--task-c-bg-done);
      border-color: var(--task-c-bg-done-border);
    }
  }

  .ico-btn,
  .play-icon,
  .pause-icon {
    opacity: var(--task-icon-done-opacity);
  }
}

// Combined states
:host-context(.isDarkTheme) {
  color: var(--text-color);

  &.isSelected,
  &.isCurrent {
    color: var(--text-color-most-intense);
  }

  &.isSelected.isSelected .box {
    background: var(--task-c-selected-bg);
  }

  &.isDone .box {
    background: var(--task-c-bg-done);
  }
}

:host-context(.isLightTheme) {
  &.isSelected.isSelected .box {
    background: var(--task-c-selected-bg);
  }
}

// Hover states
:host.isHover {
  > .inner-wrapper > .box {
    @include darkTheme {
      background: var(--task-c-hover-bg);
    }

    @include lightTheme {
      border-color: var(--extra-border-color);
    }
  }

  &.isDone > .inner-wrapper > .box {
    @include darkTheme {
      background: var(--task-c-hover-bg-done);
    }
  }

  &.isSelected > .inner-wrapper > .box {
    @include darkTheme {
      background: var(--task-c-selected-hover-bg);
    }
  }
}
